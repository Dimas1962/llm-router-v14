version: '3.8'

services:
  unified-router:
    build:
      context: .
      dockerfile: Dockerfile
    image: unified-router:v2.0
    container_name: unified-router-v2
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - TQDM_DISABLE=1
      # Add your API keys here
      # - OPENAI_API_KEY=${OPENAI_API_KEY}
      # - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    volumes:
      # Mount for persistent cache
      - router_cache:/app/cache
      # Mount for logs
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "from src.unified.unified_router import UnifiedRouter; print('OK')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - router-network

  # Optional: Redis for caching
  redis:
    image: redis:7-alpine
    container_name: router-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    networks:
      - router-network

  # Optional: Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: router-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: unless-stopped
    networks:
      - router-network

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: router-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - router-network
    depends_on:
      - prometheus

volumes:
  router_cache:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  router-network:
    driver: bridge
